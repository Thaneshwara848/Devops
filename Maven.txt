Maven lifecycle:
	Validate, Compile, Test, Package, Integration test, Verify, Install, and Deploy.
	

Validate: This step validates if the project structure is correct. For example – 

	It checks if all the dependencies have been downloaded and 
	are available in the local repository.

Compile: It compiles the source code, converts the .java files to .class, and stores the classes in the target/classes folder.

Test: It runs unit tests for the project.

Package: This step packages the compiled code in a distributable format like JAR or WAR.

Integration test: It runs the integration tests for the project.

Verify: This step runs checks to verify that the project is valid and meets the quality standards.

Install: This step installs the packaged code to the local Maven repository.

Deploy: It copies the packaged code to the remote repository for sharing it with other developers.


Maven Commands:

mvn clean: Cleans the project and removes all files generated by the previous build.

mvn compile: Compiles source code of the project.


mvn test: Runs tests for the project.

mvn package: Creates JAR or WAR file for the project to convert it into a distributable format.

mvn install: Deploys the packaged JAR/ WAR file to the local repository.

mvn site: generate the project documentation.

mvn validate: validate the project’s POM and configuration.


mvn deploy: Copies the packaged JAR/ WAR file to the remote repository after compiling, running tests and building the project.
